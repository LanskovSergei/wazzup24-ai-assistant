// content.js - –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è Wazzup24
console.log('üöÄ Wazzup24 AI Assistant –∑–∞–≥—Ä—É–∂–µ–Ω');

class WazzupAIAssistant {
  constructor() {
    this.panel = null;
    this.apiKey = null;
    this.isGenerating = false;
    this.lastMessageText = '';
    this.messageObserver = null;
    this.lastProcessedChatId = null;
    this.keepAlivePort = null;
    this.currentView = 'responses'; // 'responses' –∏–ª–∏ 'prompt'
    this.panelPosition = 100; // –ü–æ–∑–∏—Ü–∏—è –æ—Ç –Ω–∏–∑–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
    
    // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è Wazzup24
    this.selectors = {
      chatInput: '.chat-input[contenteditable="true"]',
      messagesList: '.body-messages-list',
      incomingMessage: '.body-messages-item.incoming',
      messageText: '.body-text-message.body-text div[dir="auto"]',
      sendButton: '.footer-send button',
      chatContainer: '.body-messages'
    };
    
    this.init();
  }

  async init() {
    console.log('üìù –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è...');
    
    await this.loadSettings();
    await this.loadPanelPosition();
    
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', () => this.setup());
    } else {
      this.setup();
    }
  }

  async loadSettings() {
    return new Promise((resolve) => {
      chrome.storage.sync.get(['apiKey', 'enabled', 'systemPrompt'], (data) => {
        this.apiKey = data.apiKey || null;
        this.enabled = data.enabled !== false;
        this.systemPrompt = data.systemPrompt || this.getDefaultPrompt();
        console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', { hasKey: !!this.apiKey, enabled: this.enabled });
        resolve();
      });
    });
  }

  async loadPanelPosition() {
    return new Promise((resolve) => {
      chrome.storage.local.get(['panelPosition'], (data) => {
        if (data.panelPosition !== undefined) {
          this.panelPosition = data.panelPosition;
        }
        console.log('üìç –ü–æ–∑–∏—Ü–∏—è –ø–∞–Ω–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', this.panelPosition);
        resolve();
      });
    });
  }

  savePanelPosition() {
    chrome.storage.local.set({ panelPosition: this.panelPosition });
    console.log('üíæ –ü–æ–∑–∏—Ü–∏—è –ø–∞–Ω–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞:', this.panelPosition);
  }

  getDefaultPrompt() {
    return `–¢—ã ‚Äî –º–µ–Ω–µ–¥–∂–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞ DJI Market.

–í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê –û–ë–†–ê–©–ï–ù–ò–Ø:
- –í—Å–µ–≥–¥–∞ –æ–±—Ä–∞—â–∞–π—Å—è –Ω–∞ "–í—ã" (—Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã): "–í—ã", "–í–∞–º", "–í–∞—Å", "–í–∞—à"
- –ü–∏—à–∏ –≤–µ–∂–ª–∏–≤–æ, –≥—Ä–∞–º–æ—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É

–¢–í–û–Ø –†–û–õ–¨:
–ü–æ–º–æ–≥–∞–µ—à—å –∫–ª–∏–µ–Ω—Ç–∞–º –≤—ã–±—Ä–∞—Ç—å –∏ –∫—É–ø–∏—Ç—å –∫–≤–∞–¥—Ä–æ–∫–æ–ø—Ç–µ—Ä—ã, –∫–∞–º–µ—Ä—ã, —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä—ã –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã DJI.

–ò–°–¢–û–ß–ù–ò–ö –ò–ù–§–û–†–ú–ê–¶–ò–ò:
–ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞ dji-market.ru ‚Äî –Ω–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏ —Ü–µ–Ω.

–ü–†–ò –û–¢–í–ï–¢–ï:
1. –ü—Ä–µ–¥–ª–∞–≥–∞–π 1‚Äì3 –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –º–æ–¥–µ–ª–∏ —Å:
   - –ù–∞–∑–≤–∞–Ω–∏–µ–º
   - –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–º –ø–æ —Ü–µ–Ω–µ
   - –°—Å—ã–ª–∫–æ–π –Ω–∞ dji-market.ru
2. –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π, —á—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è
3. –ü–∏—à–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ, —Å –ø–æ–ª—å–∑–æ–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞: —á–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –º–æ–¥–µ–ª—å –ª—É—á—à–µ –∏ –¥–ª—è –∫–æ–≥–æ –æ–Ω–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç
4. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–æ–¥—Ç–∞–ª–∫–∏–≤–∞–π –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –¥–∏–∞–ª–æ–≥–∞:
   - –ó–∞–¥–∞–≤–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
   - –ü—Ä–µ–¥–ª–∞–≥–∞–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
   - –†–µ–∫–æ–º–µ–Ω–¥—É–π –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏–ª–∏ –∞–ø–≥—Ä–µ–π–¥—ã
   - –ü—Ä–µ–¥–ª–∞–≥–∞–π –æ—Ñ–æ—Ä–º–∏—Ç—å –ö–ü –∏–ª–∏ –∑–∞–∫–∞–∑
   - –ò–Ω—Ç–µ—Ä–µ—Å—É–π—Å—è –æ–ø—ã—Ç–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫–∏
5. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –¥–∏–∞–ª–æ–≥ –≤–¥—É–º—á–∏–≤–æ, –ø–æ–∫–∞–∑—ã–≤–∞–π —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç—å

–†–ê–ë–û–¢–ê –° –í–û–ó–†–ê–ñ–ï–ù–ò–Ø–ú–ò –ö–õ–ò–ï–ù–¢–ê:
–ö–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –≤—ã—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–º–Ω–µ–Ω–∏—è –∏–ª–∏ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–¥–æ—Ä–æ–≥–æ", "–Ω–µ —É–≤–µ—Ä–µ–Ω", "–≤–∏–¥–µ–ª –¥–µ—à–µ–≤–ª–µ", "–∞ –≤–¥—Ä—É–≥ —Å–ª–æ–º–∞–µ—Ç—Å—è"), –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–π –∏—Ö —Å–ø–æ–∫–æ–π–Ω–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ:
- "–î–æ—Ä–æ–≥–æ" / "–í—ã—Å–æ–∫–∞—è —Ü–µ–Ω–∞" ‚Üí –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è, –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å, –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
- "–°–æ–º–Ω–µ–Ω–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ" ‚Üí –¢–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª –æ—Ç DJI, –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è, —Å–µ—Ä–≤–∏—Å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏
- "–í–∏–¥–µ–ª –¥–µ—à–µ–≤–ª–µ" ‚Üí –£ –Ω–∞—Å 100% –æ—Ä–∏–≥–∏–Ω–∞–ª, –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞, –ø–æ–º–æ—â—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ, –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è
- "–ë–æ—é—Å—å —Å–ª–æ–º–∞–µ—Ç—Å—è" ‚Üí –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è, –Ω–∞—à —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä, —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7
- "–ù–µ —É–≤–µ—Ä–µ–Ω –≤ –≤—ã–±–æ—Ä–µ" ‚Üí –ü–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥ –í–∞—à–∏ –∑–∞–¥–∞—á–∏, —Ä–∞—Å—Å–∫–∞–∂—É –æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏

–ï–°–õ–ò –ö–õ–ò–ï–ù–¢ –°–û–ú–ù–ï–í–ê–ï–¢–°–Ø:
- –ü–æ–º–æ–≥–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤—ã–±–æ—Ä–æ–º —á–µ—Ä–µ–∑ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- –ü—Ä–µ–¥–ª–æ–∂–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ (–ö–ü) —Å —Ä–∞—Å—á—ë—Ç–æ–º
- –ü—Ä–µ–¥–ª–æ–∂–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
- –†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —Ç—Ä–µ–π–¥-–∏–Ω –∏–ª–∏ —Ä–∞—Å—Å—Ä–æ—á–∫—É (–µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ)

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞, –ö–ê–ñ–î–´–ô –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–¥—Ç–∞–ª–∫–∏–≤–∞–µ—Ç –∫ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—é –¥–∏–∞–ª–æ–≥–∞:

1. –ö–û–†–û–¢–ö–ò–ô –° –í–û–ü–†–û–°–û–ú (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
   - –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞
   - –£—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞

2. –ü–û–î–†–û–ë–ù–´–ô –° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ï–ô (3-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π)
   - –†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç —Å –¥–µ—Ç–∞–ª—è–º–∏
   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
   - –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø—Ü–∏–π –∏–ª–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

3. –≠–ö–°–ü–ï–†–¢–ù–´–ô –° –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï–ú (3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
   - –≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
   - –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞
   - –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è (–æ—Ñ–æ—Ä–º–∏—Ç—å –ö–ü, –∑–∞–∫–∞–∑, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é)

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
- –í –ö–ê–ñ–î–û–ú –≤–∞—Ä–∏–∞–Ω—Ç–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —ç–ª–µ–º–µ–Ω—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–π –¥–∏–∞–ª–æ–≥ (–≤–æ–ø—Ä–æ—Å, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è)
- –ù–ï –∑–∞–∫—Ä—ã–≤–∞–π –¥–∏–∞–ª–æ–≥ —Ñ—Ä–∞–∑–∞–º–∏ —Ç–∏–ø–∞ "–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å!" –∏–ª–∏ "–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!"
- –ë—É–¥—å –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω—ã–º, –Ω–æ –Ω–µ –Ω–∞–≤—è–∑—á–∏–≤—ã–º`;
  }

  setup() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
    
    const chatContainer = 
      document.querySelector(this.selectors.chatContainer) ||
      document.querySelector('[class*="body-messages"]') ||
      document.querySelector('[class*="chat-container"]') ||
      document.querySelector('[class*="messages-wrapper"]') ||
      document.querySelector('main') ||
      document.querySelector('#app');
    
    if (!chatContainer) {
      console.log('‚è≥ –ß–∞—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 2 —Å–µ–∫...');
      setTimeout(() => this.setup(), 2000);
      return;
    }

    console.log('‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–∞—Ç–∞ –Ω–∞–π–¥–µ–Ω:', chatContainer.className || chatContainer.tagName);

    this.createPanel();
    this.updatePanelPosition();
    this.watchMessages();
    this.watchChatChanges();
    this.checkLastMessage();
    
    console.log('‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ');
  }

  createPanel() {
    if (document.getElementById('wazzup-ai-panel')) {
      console.log('‚ÑπÔ∏è –ü–∞–Ω–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      return;
    }

    const panel = document.createElement('div');
    panel.id = 'wazzup-ai-panel';
    panel.innerHTML = `
      <div class="wai-header">
        <div class="wai-title">
          <span class="wai-icon">‚ú®</span>
          AI –ü–æ–¥—Å–∫–∞–∑–∫–∏
        </div>
        <div class="wai-header-actions">
          <button class="wai-move-up" title="–ü–æ–¥–Ω—è—Ç—å –≤–≤–µ—Ä—Ö">‚¨ÜÔ∏è</button>
          <button class="wai-move-down" title="–û–ø—É—Å—Ç–∏—Ç—å –≤–Ω–∏–∑">‚¨áÔ∏è</button>
          <button class="wai-refresh" title="–û–±–Ω–æ–≤–∏—Ç—å –æ—Ç–≤–µ—Ç—ã">üîÑ</button>
          <button class="wai-close" title="–°–≤–µ—Ä–Ω—É—Ç—å">&times;</button>
        </div>
      </div>
      
      <div class="wai-tabs">
        <button class="wai-tab wai-tab-active" data-tab="responses">–û—Ç–≤–µ—Ç—ã</button>
        <button class="wai-tab" data-tab="prompt">–ü—Ä–æ–º–ø—Ç</button>
      </div>
      
      <div class="wai-content">
        <div class="wai-view wai-view-responses wai-view-active">
          <div class="wai-empty">
            <p>–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...</p>
            <small>–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –≥–µ–Ω–µ—Ä–∏—Ä—É—é –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤</small>
          </div>
        </div>
        
        <div class="wai-view wai-view-prompt">
          <div class="wai-prompt-editor">
            <textarea class="wai-prompt-textarea" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç...">${this.systemPrompt}</textarea>
            <div class="wai-prompt-actions">
              <button class="wai-btn wai-btn-save-prompt">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
              <button class="wai-btn wai-btn-reset-prompt">üîÑ –°–±—Ä–æ—Å–∏—Ç—å</button>
            </div>
          </div>
        </div>
      </div>
    `;

    document.body.appendChild(panel);
    this.panel = panel;

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
    panel.querySelector('.wai-move-up').addEventListener('click', () => {
      this.movePanel(-25);
    });

    panel.querySelector('.wai-move-down').addEventListener('click', () => {
      this.movePanel(25);
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    panel.querySelector('.wai-refresh').addEventListener('click', () => {
      console.log('üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤');
      if (this.lastMessageText) {
        this.generateResponses(this.lastMessageText);
      } else {
        this.showError('–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    panel.querySelector('.wai-close').addEventListener('click', () => {
      panel.classList.toggle('wai-minimized');
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–∫–ª–∞–¥–æ–∫
    panel.querySelectorAll('.wai-tab').forEach(tab => {
      tab.addEventListener('click', () => {
        const tabName = tab.dataset.tab;
        this.switchTab(tabName);
      });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –ø—Ä–æ–º–ø—Ç–∞
    panel.querySelector('.wai-btn-save-prompt').addEventListener('click', () => {
      this.savePrompt();
    });

    panel.querySelector('.wai-btn-reset-prompt').addEventListener('click', () => {
      this.resetPrompt();
    });

    console.log('üé® –ü–∞–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ DOM');
  }

  movePanel(delta) {
    this.panelPosition += delta;
    
    // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    const maxHeight = window.innerHeight - 700;
    if (this.panelPosition < 20) this.panelPosition = 20;
    if (this.panelPosition > maxHeight) this.panelPosition = maxHeight;
    
    this.updatePanelPosition();
    this.savePanelPosition();
  }

  updatePanelPosition() {
    if (this.panel) {
      this.panel.style.bottom = `${this.panelPosition}px`;
    }
  }

  switchTab(tabName) {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    this.panel.querySelectorAll('.wai-tab').forEach(tab => {
      tab.classList.remove('wai-tab-active');
      if (tab.dataset.tab === tabName) {
        tab.classList.add('wai-tab-active');
      }
    });

    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    this.panel.querySelectorAll('.wai-view').forEach(view => {
      view.classList.remove('wai-view-active');
    });
    this.panel.querySelector(`.wai-view-${tabName}`).classList.add('wai-view-active');

    this.currentView = tabName;
  }

  savePrompt() {
    const textarea = this.panel.querySelector('.wai-prompt-textarea');
    const newPrompt = textarea.value.trim();
    
    if (!newPrompt) {
      alert('–ü—Ä–æ–º–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      return;
    }

    this.systemPrompt = newPrompt;
    chrome.storage.sync.set({ systemPrompt: newPrompt }, () => {
      alert('‚úÖ –ü—Ä–æ–º–ø—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω —É—Å–ø–µ—à–Ω–æ!');
      console.log('üíæ –ü—Ä–æ–º–ø—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω');
    });
  }

  resetPrompt() {
    if (!confirm('–°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–º–ø—Ç –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?')) {
      return;
    }

    const defaultPrompt = this.getDefaultPrompt();
    this.systemPrompt = defaultPrompt;
    
    const textarea = this.panel.querySelector('.wai-prompt-textarea');
    textarea.value = defaultPrompt;

    chrome.storage.sync.set({ systemPrompt: defaultPrompt }, () => {
      alert('‚úÖ –ü—Ä–æ–º–ø—Ç —Å–±—Ä–æ—à–µ–Ω –Ω–∞ default!');
      console.log('üîÑ –ü—Ä–æ–º–ø—Ç —Å–±—Ä–æ—à–µ–Ω');
    });
  }

  checkLastMessage() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...');
    
    const incomingMessages = document.querySelectorAll(
      '.body-messages-item.incoming, [class*="incoming"]'
    );
    
    if (incomingMessages.length === 0) {
      console.log('‚ÑπÔ∏è –í—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      this.showEmptyState();
      return;
    }
    
    const lastIncoming = incomingMessages[incomingMessages.length - 1];
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
    
    this.onNewIncomingMessage(lastIncoming, true);
  }

  watchChatChanges() {
    console.log('üëÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–º–µ–Ω—É —á–∞—Ç–∞...');
    
    let lastUrl = location.href;
    new MutationObserver(() => {
      const url = location.href;
      if (url !== lastUrl) {
        console.log('üîÑ URL –∏–∑–º–µ–Ω–∏–ª—Å—è, —á–∞—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω');
        lastUrl = url;
        this.lastMessageText = '';
        this.lastProcessedChatId = null;
        
        setTimeout(() => this.checkLastMessage(), 1000);
      }
    }).observe(document, { subtree: true, childList: true });
  }

  watchMessages() {
    const messagesList = 
      document.querySelector('.body-messages-list') ||
      document.querySelector('[class*="messages-list"]') ||
      document.querySelector('[class*="chat-messages"]') ||
      document.querySelector('.chat-body-wrapper') ||
      document.querySelector('.message-item-hover')?.parentElement ||
      document.body;
    
    if (!messagesList) {
      console.log('‚è≥ –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 2 —Å–µ–∫...');
      setTimeout(() => this.watchMessages(), 2000);
      return;
    }

    console.log('‚úÖ –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞–π–¥–µ–Ω:', messagesList.className || messagesList.tagName);

    this.messageObserver = new MutationObserver((mutations) => {
      for (const mutation of mutations) {
        if (mutation.addedNodes.length > 0) {
          mutation.addedNodes.forEach((node) => {
            if (node.nodeType === 1 && node.querySelector) {
              const incomingMsg = 
                node.querySelector('.body-messages-item.incoming') ||
                (node.classList && node.classList.contains('incoming') ? node : null) ||
                node.querySelector('[class*="incoming"]');
                
              if (incomingMsg) {
                this.onNewIncomingMessage(incomingMsg, false);
              }
            }
          });
        }
      }
    });

    this.messageObserver.observe(messagesList, {
      childList: true,
      subtree: true
    });

    console.log('üëÄ –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
  }

  onNewIncomingMessage(messageElement, isInitial = false) {
    console.log('üîî –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', isInitial ? '(–ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ)' : '(–Ω–æ–≤–æ–µ)');
    
    const textElement = 
      messageElement.querySelector(this.selectors.messageText) ||
      messageElement.querySelector('[dir="auto"]') ||
      messageElement.querySelector('.body-text') ||
      messageElement.querySelector('[class*="text"]');
      
    if (!textElement) {
      console.log('‚ö†Ô∏è –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
      if (isInitial) this.showEmptyState();
      return;
    }

    const messageText = textElement.textContent.trim();
    
    if (!messageText) {
      console.log('‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ');
      if (isInitial) this.showEmptyState();
      return;
    }
    
    if (isInitial || messageText !== this.lastMessageText) {
      this.lastMessageText = messageText;
      console.log('üì® –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:', messageText);
      this.generateResponses(messageText);
    } else {
      console.log('‚ÑπÔ∏è –î—É–±–ª–∏–∫–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º');
    }
  }

  showEmptyState() {
    const content = this.panel.querySelector('.wai-view-responses');
    content.innerHTML = `
      <div class="wai-empty">
        <p>–ù–µ—Ç –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π</p>
        <small>–ö–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç –Ω–∞–ø–∏—à–µ—Ç, —è –ø—Ä–µ–¥–ª–æ–∂—É –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤</small>
      </div>
    `;
  }

  async wakeUpServiceWorker() {
    return new Promise((resolve) => {
      chrome.runtime.sendMessage({ type: 'PING' }, (response) => {
        if (chrome.runtime.lastError) {
          console.log('‚ö†Ô∏è Service Worker —Å–ø–∏—Ç, –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–±—É–¥–∏—Ç—å...');
          setTimeout(() => {
            chrome.runtime.sendMessage({ type: 'PING' }, () => {
              resolve();
            });
          }, 100);
        } else {
          console.log('‚úÖ Service Worker –∞–∫—Ç–∏–≤–µ–Ω');
          resolve();
        }
      });
    });
  }

  async generateResponses(clientMessage) {
    console.log('üéØ generateResponses –≤—ã–∑–≤–∞–Ω —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º:', clientMessage);
    
    if (!this.apiKey) {
      console.error('‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω');
      this.showError('API –∫–ª—é—á OpenAI –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è.');
      return;
    }

    console.log('‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω:', this.apiKey.substring(0, 10) + '...');

    if (this.isGenerating) {
      console.log('‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...');
      return;
    }

    this.isGenerating = true;
    this.showLoading();

    try {
      await this.wakeUpServiceWorker();
      
      const context = this.getConversationContext();
      console.log('üìù –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω:', context);
      
      const settings

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
const assistant = new WazzupAIAssistant();
