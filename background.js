// background.js - Service Worker –¥–ª—è Wazzup24 AI Assistant

console.log('üöÄ Wazzup24 AI Assistant Service Worker –∑–∞–ø—É—â–µ–Ω');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
chrome.runtime.onInstalled.addListener((details) => {
  if (details.reason === 'install') {
    console.log('üéâ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    chrome.storage.sync.set({
      enabled: true,
      apiKey: '',
      model: 'gpt-4',
      customPrompt: '',
      temperature: 0.7,
      maxTokens: 500,
      contextMessages: 5
    });
    
  } else if (details.reason === 'update') {
    const previousVersion = details.previousVersion;
    const currentVersion = chrome.runtime.getManifest().version;
    console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å ${previousVersion} –Ω–∞ ${currentVersion}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç content script
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
  console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message.type);
  
  switch (message.type) {
    case 'GET_SETTINGS':
      handleGetSettings(sendResponse);
      return true; // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
      
    case 'GENERATE_RESPONSES':
      handleGenerateResponses(message.data, sendResponse);
      return true; // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
      
    case 'LOG_ERROR':
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–∑ content script:', message.error);
      break;
      
    case 'LOG_INFO':
      console.log('‚ÑπÔ∏è –ò–Ω—Ñ–æ –∏–∑ content script:', message.info);
      break;
      
    default:
      console.warn('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è:', message.type);
  }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
async function handleGetSettings(sendResponse) {
  try {
    const settings = await chrome.storage.sync.get([
      'enabled',
      'apiKey',
      'model',
      'customPrompt',
      'temperature',
      'maxTokens',
      'contextMessages'
    ]);
    
    sendResponse({ success: true, settings });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    sendResponse({ success: false, error: error.message });
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ OpenAI API
async function handleGenerateResponses(data, sendResponse) {
  try {
    const { clientMessage, context, settings } = data;
    
    if (!settings.apiKey) {
      throw new Error('API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
    
    console.log('ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è:', clientMessage);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
    const prompt = buildPrompt(clientMessage, context, settings.customPrompt);
    
    // –ó–∞–ø—Ä–æ—Å –∫ OpenAI API
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${settings.apiKey}`
      },
      body: JSON.stringify({
        model: settings.model || 'gpt-4',
        messages: [
          {
            role: 'system',
            content: '–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ –¥—Ä–æ–Ω–æ–≤ DJI Market. –ì–µ–Ω–µ—Ä–∏—Ä—É–π 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤.'
          },
          {
            role: 'user',
            content: prompt
          }
        ],
        temperature: settings.temperature || 0.7,
        max_tokens: settings.maxTokens || 500
      })
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.error?.message || `API –æ—à–∏–±–∫–∞: ${response.status}`);
    }
    
    const responseData = await response.json();
    const content = responseData.choices[0].message.content;
    
    console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç OpenAI –ø–æ–ª—É—á–µ–Ω');
    
    // –ü–∞—Ä—Å–∏–º JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
    const variants = parseGPTResponse(content);
    
    sendResponse({ 
      success: true, 
      variants,
      usage: responseData.usage // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', error);
    sendResponse({ 
      success: false, 
      error: error.message 
    });
  }
}

// –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è GPT
function buildPrompt(clientMessage, context, customPrompt) {
  let prompt = `–¢—ã ‚Äî –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ DJI Market. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ WhatsApp –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É —Ç—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤—ã–±–æ—Ä. –û—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á—ë—Ç–∫–∏–º–∏, –ø–æ–ª–µ–∑–Ω—ã–º–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ–Ω—É –æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞.

–¢–æ–Ω –æ–±—â–µ–Ω–∏—è:
- –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π.
- –ê–¥–∞–ø—Ç–∏—Ä—É–π—Å—è –ø–æ–¥ —Å—Ç–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –æ–Ω –ø–∏—à–µ—Ç —Ñ–æ—Ä–º–∞–ª—å–Ω–æ ‚Äî –æ—Ç–≤–µ—á–∞–π –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ ‚Äî –ø–∏—à–∏ –ø—Ä–æ—â–µ).
- –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–∞–¥–∞—ë—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å ‚Äî –æ—Ç–≤–µ—á–∞–π –ª–∞–∫–æ–Ω–∏—á–Ω–æ, –µ—Å–ª–∏ —Ö–æ—á–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π ‚Äî –¥–∞–≤–∞–π —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç.

`;

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
  if (customPrompt) {
    prompt += `\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: ${customPrompt}\n`;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–ø–∏—Å–∫–∏
  if (context && context.length > 0) {
    prompt += '\n–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–ø–∏—Å–∫–∏:\n';
    context.forEach((msg) => {
      const role = msg.role === 'client' ? '–ö–ª–∏–µ–Ω—Ç' : '–ú–µ–Ω–µ–¥–∂–µ—Ä';
      prompt += `${role}: ${msg.text}\n`;
    });
  }

  prompt += `\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞: "${clientMessage}"

–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞:
1. –ö–æ—Ä–æ—Ç–∫–∏–π –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
2. –†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
3. –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)

–í–ê–ñ–ù–û: –í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û JSON –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
{
  "variant1": "—Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞",
  "variant2": "—Ç–µ–∫—Å—Ç —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç–∞",
  "variant3": "—Ç–µ–∫—Å—Ç –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞"
}

–ù–∏–∫–∞–∫–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, —Ç–æ–ª—å–∫–æ JSON!`;

  return prompt;
}

// –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞ –æ—Ç GPT
function parseGPTResponse(content) {
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ JSON –≤ –æ—Ç–≤–µ—Ç–µ
    const jsonMatch = content.match(/\{[\s\S]*\}/);
    
    if (!jsonMatch) {
      throw new Error('JSON –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ GPT');
    }
    
    const parsed = JSON.parse(jsonMatch[0]);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    if (!parsed.variant1 || !parsed.variant2 || !parsed.variant3) {
      throw new Error('–ù–µ–ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç GPT');
    }
    
    return [
      { label: '–ö–æ—Ä–æ—Ç–∫–∏–π', text: parsed.variant1 },
      { label: '–ü–æ–¥—Ä–æ–±–Ω—ã–π', text: parsed.variant2 },
      { label: '–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π', text: parsed.variant3 }
    ];
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ GPT:', error);
    console.log('–ò—Å—Ö–æ–¥–Ω—ã–π –æ—Ç–≤–µ—Ç:', content);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
    return [
      { label: '–ö–æ—Ä–æ—Ç–∫–∏–π', text: '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –£—Ç–æ—á–Ω—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç–≤–µ—á—É –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç üôÇ' },
      { label: '–ü–æ–¥—Ä–æ–±–Ω—ã–π', text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –í–∞—à –≤–æ–ø—Ä–æ—Å. –°–µ–π—á–∞—Å —É—Ç–æ—á–Ω—é –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –í–∞–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.' },
      { label: '–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π', text: '–ü—Ä–∏–≤–µ—Ç! –û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å üòä –î–∞–π—Ç–µ –º–Ω–µ –ø–∞—Ä—É –º–∏–Ω—É—Ç, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∏ —è –≤—Å—ë –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å—Å–∫–∞–∂—É!' }
    ];
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ storage
chrome.storage.onChanged.addListener((changes, areaName) => {
  if (areaName === 'sync') {
    console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã:', changes);
    
    // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è —Å—Ç–∞—Ç—É—Å enabled
    if (changes.enabled) {
      const isEnabled = changes.enabled.newValue;
      console.log(`üîÑ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ ${isEnabled ? '–≤–∫–ª—é—á–µ–Ω–æ' : '–≤—ã–∫–ª—é—á–µ–Ω–æ'}`);
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏ —Å Wazzup24
      notifyAllTabs({ type: 'ENABLED_CHANGED', enabled: isEnabled });
    }
  }
});

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫ Wazzup24
async function notifyAllTabs(message) {
  try {
    const tabs = await chrome.tabs.query({ 
      url: 'https://app.wazzup24.com/*' 
    });
    
    tabs.forEach((tab) => {
      chrome.tabs.sendMessage(tab.id, message).catch((error) => {
        console.log(`‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–∞–± ${tab.id}`);
      });
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫:', error);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –∏–∫–æ–Ω–∫—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
chrome.action.onClicked.addListener(async (tab) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Wazzup24 –ª–∏ –º—ã
  if (tab.url && tab.url.includes('wazzup24.com')) {
    console.log('üìå –ö–ª–∏–∫ –Ω–∞ –∏–∫–æ–Ω–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Wazzup24');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É toggle –ø–∞–Ω–µ–ª–∏
    try {
      await chrome.tabs.sendMessage(tab.id, { 
        type: 'TOGGLE_PANEL' 
      });
    } catch (error) {
      console.log('‚ÑπÔ∏è Content script –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    }
  }
});

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
let generationCount = 0;

chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
  if (message.type === 'GENERATION_SUCCESS') {
    generationCount++;
    console.log(`üìä –í—Å–µ–≥–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π: ${generationCount}`);
  }
});

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
chrome.alarms.create('clearCache', { periodInMinutes: 60 });

chrome.alarms.onAlarm.addListener((alarm) => {
  if (alarm.name === 'clearCache') {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞...');
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏
  }
});

console.log('‚úÖ Background Service Worker –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
